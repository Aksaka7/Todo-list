{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dosyalar\\\\ToDOList\\\\todolist\\\\src\\\\components\\\\Todo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { GrFormClose, GrFormEdit, GrFormCheckmark } from \"react-icons/gr\";\nimport { useTodoLayerValue } from \"../context/TodoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  _s();\n\n  let {\n    todo\n  } = _ref;\n  const [{}, dispatch] = useTodoLayerValue();\n  const [editable, setEditable] = useState(false);\n\n  const removeTodo = todoId => {\n    dispatch({\n      type: 'REMOVE_TODO',\n      payload: todoId\n    });\n  };\n\n  const completeTodo = todoId => {\n    dispatch({\n      type: 'COMPLETE_TODO',\n      payload: todoId\n    });\n  };\n\n  const todoStyle = clsx({\n    [\"todo-row\"]: true,\n    [\"completed\"]: todo.isComplete\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todoStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-icons\",\n      children: [/*#__PURE__*/_jsxDEV(GrFormClose, {\n        className: \"todo-icon\",\n        onClick: () => removeTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GrFormEdit, {\n        className: \"todo-icon\",\n        onClick: () => setEditable()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Todo, \"peN1f/iiZ65uCnLag1QQejVLdu8=\", false, function () {\n  return [useTodoLayerValue];\n});\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/Dosyalar/ToDOList/todolist/src/components/Todo.jsx"],"names":["React","useState","clsx","GrFormClose","GrFormEdit","GrFormCheckmark","useTodoLayerValue","Todo","todo","dispatch","editable","setEditable","removeTodo","todoId","type","payload","completeTodo","todoStyle","isComplete","id","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,UAAtB,EAAkCC,eAAlC,QAA0D,gBAA1D;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;;AAEA,MAAMC,IAAI,GAAG,QAAc;AAAA;;AAAA,MAAZ;AAACC,IAAAA;AAAD,GAAY;AAEvB,QAAM,CAAC,EAAD,EAAMC,QAAN,IAAkBH,iBAAiB,EAAzC;AACA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;;AAEA,QAAMW,UAAU,GAAGC,MAAM,IAAG;AAC1BJ,IAAAA,QAAQ,CAAC;AACPK,MAAAA,IAAI,EAAE,aADC;AAEPC,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GALD;;AAOA,QAAMG,YAAY,GAAIH,MAAD,IAAY;AAEhCJ,IAAAA,QAAQ,CAAC;AACRK,MAAAA,IAAI,EAAE,eADE;AAERC,MAAAA,OAAO,EAAEF;AAFD,KAAD,CAAR;AAIA,GAND;;AAQA,QAAMI,SAAS,GAAGf,IAAI,CAAC;AACrB,KAAC,UAAD,GAAc,IADO;AAErB,KAAC,WAAD,GAAeM,IAAI,CAACU;AAFC,GAAD,CAAtB;AAKF,sBACE;AAAK,IAAA,SAAS,EAAED,SAAhB;AAAA,4BACE;AAAK,MAAA,OAAO,EAAE,MAAMD,YAAY,CAACR,IAAI,CAACW,EAAN,CAAhC;AAAA,gBACGX,IAAI,CAACY;AADR;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACE,QAAC,WAAD;AACA,QAAA,SAAS,EAAC,WADV;AAEA,QAAA,OAAO,EAAE,MAAMR,UAAU,CAACJ,IAAI,CAACW,EAAN;AAFzB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,UAAD;AAAY,QAAA,SAAS,EAAC,WAAtB;AAAkC,QAAA,OAAO,EAAE,MAAMR,WAAW;AAA5D;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAvCD;;GAAMJ,I;UAEsBD,iB;;;KAFtBC,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React, {useState}from 'react'\r\nimport clsx from 'clsx'\r\nimport { GrFormClose, GrFormEdit, GrFormCheckmark } from  \"react-icons/gr\";\r\nimport { useTodoLayerValue } from \"../context/TodoContext\"\r\n\r\nconst Todo = ( {todo} ) => {\r\n\r\n    const [{ }, dispatch] = useTodoLayerValue();\r\n    const [editable, setEditable] = useState(false);\r\n\r\n    const removeTodo = todoId =>{\r\n      dispatch({\r\n        type: 'REMOVE_TODO',\r\n        payload: todoId,\r\n      });\r\n    }\r\n\r\n    const completeTodo = (todoId) => {\r\n\r\n     dispatch({\r\n      type: 'COMPLETE_TODO',\r\n      payload: todoId,\r\n     });\r\n    }\r\n\r\n    const todoStyle = clsx({\r\n      [\"todo-row\"]: true, \r\n      [\"completed\"]: todo.isComplete,\r\n    })\r\n\r\n  return (\r\n    <div className={todoStyle}>\r\n      <div onClick={() => completeTodo(todo.id)}>\r\n        {todo.content}\r\n      </div>\r\n      <div className=\"todo-icons\">\r\n        <GrFormClose \r\n        className=\"todo-icon\"\r\n        onClick={() => removeTodo(todo.id)} \r\n        />\r\n        <GrFormEdit className=\"todo-icon\" onClick={() => setEditable()}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Dosyalar\\\\ToDOList\\\\todolist\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTodoLayerValue } from './context/TodoContext';\nimport TodoList from './components/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [{\n    todos\n  }, dispatch] = useTodoLayerValue();\n  const [content, setContent] = useState(\"\");\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!content) return;\n    const newTodo = {\n      id: Math.floor(Math.random() * 465446556),\n      content,\n      isComplete: false\n    };\n    dispatch({\n      type: \"ADD_TODO\",\n      payload: todo\n    });\n    setContent(newTodo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"todo-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"todo-input\",\n        onChange: event => setContent(event.target.value),\n        value: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-btn\",\n        children: \"Ekle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"UA/DNTxrqGijjKiu/Yu+/xJJvR0=\", false, function () {\n  return [useTodoLayerValue];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Dosyalar/ToDOList/todolist/src/App.js"],"names":["React","useState","useTodoLayerValue","TodoList","App","todos","dispatch","content","setContent","handleSubmit","event","preventDefault","newTodo","id","Math","floor","random","isComplete","type","payload","todo","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,SAAQC,iBAAR,QAAgC,uBAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAAC;AAACC,IAAAA;AAAD,GAAD,EAAUC,QAAV,IAAsBJ,iBAAiB,EAA7C;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;;AACA,QAAMQ,YAAY,GAAIC,KAAD,IAAS;AAC1BA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAG,CAACJ,OAAJ,EAAa;AAEb,UAAMK,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,SAA3B,CADU;AAEdT,MAAAA,OAFc;AAGdU,MAAAA,UAAU,EAAE;AAHE,KAAhB;AAMAX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAE,UADC;AAEPC,MAAAA,OAAO,EAAEC;AAFF,KAAD,CAAR;AAKAZ,IAAAA,UAAU,CAACI,OAAD,CAAV;AACH,GAjBD;;AAkBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEH,YAAhB;AAA8B,MAAA,SAAS,EAAC,WAAxC;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAA0C,QAAA,QAAQ,EAAEC,KAAK,IAAEF,UAAU,CAACE,KAAK,CAACW,MAAN,CAAaC,KAAd,CAArE;AAA2F,QAAA,KAAK,EAAEf;AAAlG;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,UAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAlCD;;GAAMH,G;UAEwBF,iB;;;KAFxBE,G;AAoCN,eAAeA,GAAf","sourcesContent":["import React,{useState} from 'react'\nimport {useTodoLayerValue} from './context/TodoContext'\nimport TodoList from './components/TodoList'\n\nconst App = () => {\n\n  const [{todos}, dispatch] = useTodoLayerValue();\n  const [content, setContent] = useState(\"\");\n  const handleSubmit = (event)=>{\n      event.preventDefault();\n\n      if(!content) return;\n\n      const newTodo = {\n        id: Math.floor(Math.random() * 465446556 ),\n        content,\n        isComplete: false\n      };\n\n      dispatch({\n        type: \"ADD_TODO\",\n        payload: todo,\n      });\n\n      setContent(newTodo);\n  }\n  return (\n    <div className=\"container\">\n      <form onSubmit={handleSubmit} className=\"todo-form\">\n        <input type=\"text\" className=\"todo-input\" onChange={event=>setContent(event.target.value)} value={content} />\n        <button className=\"todo-btn\">\n          Ekle\n        </button>\n      </form>\n\n      {/* <TodoList todos={todos} /> */}\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}